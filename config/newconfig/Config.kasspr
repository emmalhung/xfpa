################################################################################
#                                                                              #
#   ##         ##   #      #####    ##   ##   ##   ##   ##    ####    ##       #
#    ##   #   ##   # #     ##  ##   ###  ##   ##   ###  ##   ##       ##       #
#     ## ### ##   #####    #####    ## # ##   ##   ## # ##   ## ###   ##       #
#      ### ###   ##   ##   ## ##    ##  ###   ##   ##  ###   ##  ##            #
#       #   #   ##     ##  ##  ##   ##   ##   ##   ##   ##    #####   ##       #
#                                                                              #
#                                                                              #
#   NEVER MODIFY THIS FILE!                                                    #
#                                                                              #
#   All Config-type files in the $FPA/config directory can and will be updated #
#   with any new release, update, or patch of the FPA software suite.          #
#                                                                              #
#   You should only introduce changes and additions to the information in this #
#   file, by using a local Config file that refers to this file through an     #
#   #include statement.  Refer to the file Config, or d.Config for further     #
#   instructions.                                                              #
#                                                                              #
################################################################################

################################################################################
#
# "Config.kasspr" Configuration File (kasspr)
#
# This configuration file contains the necessary information for constructing,
# storing and accessing meteorological and oceanographic fields, specific to
# the kasspr model.
#
# (This does not include the transient visual description, which is provided
#  in the "Presentation" configuration file, though it soon may!)
#
# Note: All data stored in metafiles, as well as all data in constants or
#       equations, is converted to standard MKS units before being used.
#       For example, a constant in this file with target units of degreesC
#       would be converted to degreesK whenever it was used.
#       Similarly, an equation in this file with target units of mb/12hr would
#       return values converted to Pa/s, with a precision determined by the
#       natural units of the element corresponding to the equation id.
#
################################################################################

revision 6.0

################################################################################
#
# "Fields" block - Descriptions of each field
#
# Each field in this block is identified by a unique <element> <level> pair.
# Each element name must correspond to an element name defined in the
# "Elements" block below.
# Similarly, each level name must correspond to a level name defined in the
# "Levels" block below.
# (Note that all name comparisons are case insensitive!)
#
################################################################################

Fields
	{

	helicity		surface
		{
		label			= <*default*> "Helicity"
		short_label		= <*default*> "Helicity"
		field_group		= Surface

		element_info	= Default
		level_info		= Default
		}

	areas			surface
		{
		element_info	=
			{
			attributes		=
				{
				# >>> attribute default values get added here <<< #
				}
			editor		=
				{
				overlaying				= False
				# >>> one of the following <<< #
				entry_file				= areas_surface
				memory_file				= areas_surface_memory_preset
				}
			}
		}

	areas			low
		{
		element_info	=
			{
			attributes		=
				{
				# >>> attribute default values get added here <<< #
				}
			editor		=
				{
				overlaying				= False
				# >>> one of the following <<< #
				entry_file				= areas_low
				memory_file				= areas_low_memory_preset
				}
			}
		}

	areas			mid
		{
		element_info	=
			{
			attributes		=
				{
				# >>> attribute default values get added here <<< #
				}
			editor		=
				{
				overlaying				= False
				# >>> one of the following <<< #
				entry_file				= areas_mid
				memory_file				= areas_mid_memory_preset
				}
			}
		}

	areas			upr
		{
		element_info	=
			{
			attributes		=
				{
				# >>> attribute default values get added here <<< #
				}
			editor		=
				{
				overlaying				= False
				# >>> one of the following <<< #
				entry_file				= areas_upr
				memory_file				= areas_upr_memory_preset
				}
			}
		}

	lines			surface
		{
		element_info	=
			{
			line_types		=
				{
				cold
					{
					type_label	= <*default*> "Cold Front"
					pattern		= front.sfc.cold
					}
				warm
					{
					type_label	= <*default*> "Warm Front"
					pattern		= front.sfc.warm
					}
				stationary
					{
					type_label	= <*default*> "Stationary Front"
					pattern		= front.sfc.stationary
					}
				occluded
					{
					type_label	= <*default*> "Occluded Front"
					pattern		= front.sfc.occluded
					}
				trowal
					{
					type_label	= <*default*> "Trowal"
					pattern		= trowal
					}
				trof
					{
					type_label	= <*default*> "Trof"
					pattern		= trof
					}
				ridge
					{
					type_label	= <*default*> "Ridge"
					pattern		= ridge
					}
				dry_line
					{
					type_label	= <*default*> "Dry Line"
					}
				conv_zone_sfc
					{
					type_label	= <*default*> "Sfc Conv Zone"
					}
				moist_axis_sfc
					{
					type_label	= <*default*> "Sfc Moist Axis"
					}
				conv_bndry_sfc
					{
					type_label	= <*default*> "Sfc Conv Bndry"
					}
				}

			editor			= 
				{
				}
			}
		}

	lines			low
		{
		element_info	=
			{
			line_types		=
				{
				upper_cold
					{
					type_label	= <*default*> "Upper Cold Front"
					pattern		= front.upr.cold
					}
				upper_warm
					{
					type_label	= <*default*> "Upper Warm Front"
					pattern		= front.upr.warm
					}
				upper_stationary
					{
					type_label	= <*default*> "Upper Stationary Front"
					pattern		= front.upr.stationary
					}
				upper_trof
					{
					type_label	= <*default*> "Upper Trof"
					pattern		= trof.upr
					}
				jet_850
					{
					type_label	= <*default*> "850 mb Jet"
					}
				th_ridge_850
					{
					type_label	= <*default*> "850 mb Temp Rdg"
					}
				moist_axis_850
					{
					type_label	= <*default*> "850 mb Moist Axis"
					}
				}

			editor			= 
				{
				}
			}
		}

	lines			mid
		{
		element_info	=
			{
			line_types		=
				{
				upper_cold
					{
					type_label	= <*default*> "Upper Cold Front"
					pattern		= front.upr.cold
					}
				upper_warm
					{
					type_label	= <*default*> "Upper Warm Front"
					pattern		= front.upr.warm
					}
				upper_stationary
					{
					type_label	= <*default*> "Upper Stationary Front"
					pattern		= front.upr.stationary
					}
				upper_trof
					{
					type_label	= <*default*> "Upper Trof"
					pattern		= trof.upr
					}
				th_ridge_850_500
					{
					type_label	= <*default*> "850-500 Thk Rdg"
					}
				th_trof_850_500
					{
					type_label	= <*default*> "850-500 Thk Trof"
					}
				}

			editor			= 
				{
				}
			}
		}

	lines			upr
		{
		element_info	=
			{
			line_types		=
				{
				upper_cold
					{
					type_label	= <*default*> "Upper Cold Front"
					pattern		= front.upr.cold
					}
				upper_warm
					{
					type_label	= <*default*> "Upper Warm Front"
					pattern		= front.upr.warm
					}
				upper_stationary
					{
					type_label	= <*default*> "Upper Stationary Front"
					pattern		= front.upr.stationary
					}
				upper_trof
					{
					type_label	= <*default*> "Upper Trof"
					pattern		= trof.upr
					}
				jet_250
					{
					type_label	= <*default*> "250mb Jet"
					}
				sw_trof_500
					{
					type_label	= <*default*> "500mb S/W Trof"
					}
				sw_ridge_500
					{
					type_label	= <*default*> "500mb S/W Rdg"
					}
				th_trof_500
					{
					type_label	= <*default*> "500mb Therml Trof"
					}
				th_ridge_500
					{
					type_label	= <*default*> "500mb Therml Rdg"
					}
				}

			editor			= 
				{
				}
			}
		}
	}

################################################################################
#
# "Elements" block - Descriptions of each element
#
# Each element in this block must be identified by a unique name.
# (Note that all name comparisons are case insensitive!)
#
# Each element may optionally be identified by an alias name.
# These aliases are used to match the element names used in decoding
# information from other data sources or from other FPA users.  The list of
# recognized aliases is provided for each element by the "alias" keyword.
# Only the first usage of an alias is recognized.
#
# (Note that the "equation_string" in the "equation" block can use either
# the name, the file_id, the file_ident, or any alias to refer to an element
# or level in the equation!)
#
################################################################################

Elements
	{

	helicity
		{
		label			= <*default*> "Helicity"
		short_label		= <*default*> "Helicity"
		element_group	= Kasspr_elements
		level_type		= Surface
		field_group		= Surface

		file_id			= hh
		file_ident		= helicity
		precision		= 1 none

		time_dependence	= Normal

		field_type		= Continuous
		wind_class		= None

		editor			=
			{
			hilo			= True
			poke			= 10.000  unitless
			}

		sample			= Default
		}

	lines
		{
		label			= <*default*> "Lines"
		short_label		= <*default*> "Lines"
		element_group	= Kasspr_elements
		level_type		= Level

		file_id			= ll
		file_ident		= lines
		precision		= 0.0 category

		field_type		= Line
		wind_class		= None
		editor			= None
		sample			= Default
		}

	areas
		{
		label			= <*default*> "Areas"
		short_label		= <*default*> "Areas"
		element_group	= Kasspr_elements
		level_type		= Level

		file_id			= aa
		file_ident		= areas
		precision		= 0.0 category

		field_type		= Discrete
		wind_class		= None
		editor			= None
		sample			= Default
		}

	}

################################################################################
#
# Levels block - Descriptions of each level
#
# Each level in this block must be identified by a unique name.
# (Note that all name comparisons are case insensitive!)
#
# Each level may optionally be identified by an alias name.
# These aliases are used to match the level names used in decoding
# information from other data sources or from other FPA users.  The list of
# recognized aliases is provided for each level by the "alias" keyword.
# Only the first usage of an alias is recognized.
#
################################################################################

Levels
	{

	low
		{
		label           = <*default*> "Low Level"
		short_label     = <*default*> "low"
		file_id         = low
		file_ident		= low
		field_group		= Low_Level
		level_type		= Level
		level_levels	= Pressure low
		}

	mid
		{
		label           = <*default*> "Mid Level"
		short_label     = <*default*> "mid"
		file_id         = mid
		file_ident		= mid
		field_group		= Mid_Level
		level_type		= Level
		level_levels	= Pressure mid
		}

	upr
		{
		label           = <*default*> "Upper Level"
		short_label     = <*default*> "upr"
		file_id         = upr
		file_ident		= upr
		field_group		= Upper_Level
		level_type		= Level
		level_levels	= Pressure upr
		}

	850mb
		{
		field_group		= Low_Level
		}

	700mb
		{
		field_group		= Mid_Level
		}

	500mb
		{
		field_group		= Upper_Level
		}

	250mb
		{
		field_group		= Upper_Level
		}
	}

################################################################################
#
# "Groups" block - Descriptions of field and element groups
#
################################################################################

Groups
	{

	Fields
		{

		Low_Level
			{
			label		= <*default*> "Low Level Fields"
			short_label	= <*default*> "Low"
			}

		Mid_Level
			{
			label		= <*default*> "Mid Level Fields"
			short_label	= <*default*> "Mid"
			}

		}

	Elements
		{

		Kasspr_elements
			{
		   label       = <*default*> "Kasspr Elements"
		   short_label = <*default*> "Kasspr"
			}
		}
	}

################################################################################
#
# "CrossRefs" block - Descriptions of wind and value crossreferences
#
################################################################################

CrossRefs
	{

	Winds
		{

		Vg_1000
			{
			label           = <*default*> "1000mb Geostrophic Wind"
			short_label     = <*default*> "1000 Geostr"
			wind_function   = FPA_Geostrophic_Wind_Func
			crossref_fields = 
				{
				height 1000mb
				}
			}

		Vg_250
			{
			label           = <*default*> "250mb Geostrophic Wind"
			short_label     = <*default*> "250 Geostr"
			wind_function   = FPA_Geostrophic_Wind_Func
			crossref_fields = 
				{
				height 250mb
				}
			}

		Vg_500
			{
			label           = <*default*> "500mb Geostrophic Wind"
			short_label     = <*default*> "500 Geostr"
			wind_function   = FPA_Geostrophic_Wind_Func
			crossref_fields = 
				{
				height 500mb
				}
			}

		Vg_700
			{
			label           = <*default*> "700mb Geostrophic Wind"
			short_label     = <*default*> "700 Geostr"
			wind_function   = FPA_Geostrophic_Wind_Func
			crossref_fields = 
				{
				height 700mb
				}
			}
		}
	}

################################################################################
#
# "Samples" block - Descriptions of value and wind samples
#
################################################################################

Samples
	{
	}

################################################################################
#
# "Sources" block - Descriptions of each data source
#
# Each source in this block must be identified by a unique name.
# (Note that all name comparisons are case insensitive!)
#
# Each source may optionally be identified by an alias name.
# These aliases are used to match the source names used in decoding
# information from other data sources or from other FPA users.  The list of
# recognized aliases is provided for each source by the "alias" keyword.
# Only the first usage of an alias is recognized.
#
################################################################################

Sources
	{

	HELICITY
		{
		label			= <*default*> "Helicity Fields"
		short_label		= <*default*> "Helicity Fields"
		source_type		= Guidance

		directory_tag	= kasspr
		directory_path	= HELICITY
		}

	KA_PLOT
		{
		label			= <*default*> "Kasspr Plots"
		short_label		= <*default*> "Kasspr Plots"
		source_type		= Guidance

		directory_tag	= kasspr
		directory_path	= KA_PLOT
		}
	}


################################################################################
#
# "Constants" block - List of constants for calculating fields
#
################################################################################

Constants
	{
	}

################################################################################
#
# "Units" block - Desription of units for conversion from MKS
#
################################################################################

Units
	{
	}
