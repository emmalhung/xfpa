/*========================================================================*/
/*
*	File:		main_cursor_ularrow.h
*
*   Purpose:    This is the mask for an upper left pointing solid arrow cursor.
*
*     Version 8 (c) Copyright 2011 Environment Canada
*
*   This file is part of the Forecast Production Assistant (FPA).
*   The FPA is free software: you can redistribute it and/or modify it
*   under the terms of the GNU General Public License as published by
*   the Free Software Foundation, either version 3 of the License, or
*   any later version.
*
*   The FPA is distributed in the hope that it will be useful, but
*   WITHOUT ANY WARRANTY; without even the implied warranty of
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
*   See the GNU General Public License for more details.
*
*   You should have received a copy of the GNU General Public License
*   along with the FPA.  If not, see <http://www.gnu.org/licenses/>.
*/
/*========================================================================*/

#define ularrow_width 19
#define ularrow_height 30
#define ularrow_x_hot 1
#define ularrow_y_hot 1
static Byte ularrow_bits[] = {
   0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x06, 0x00, 0x00, 0x0e, 0x00, 0x00,
   0x1e, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x7e, 0x00, 0x00, 0xfe, 0x00, 0x00,
   0xfe, 0x01, 0x00, 0xfe, 0x03, 0x00, 0xfe, 0x07, 0x00, 0xfe, 0x0f, 0x00,
   0xfe, 0x1f, 0x00, 0xfe, 0x3f, 0x00, 0xfe, 0x7f, 0x00, 0xfe, 0xff, 0x00,
   0xfe, 0xff, 0x01, 0xfe, 0xff, 0x03, 0xfe, 0x03, 0x00, 0xbe, 0x03, 0x00,
   0x1e, 0x07, 0x00, 0x0e, 0x07, 0x00, 0x06, 0x0e, 0x00, 0x02, 0x0e, 0x00,
   0x00, 0x1c, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x38, 0x00, 0x00, 0x08, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
static Byte ularrow_mask_bits[] = {
   0x03, 0x00, 0x00, 0x07, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x1f, 0x00, 0x00,
   0x3f, 0x00, 0x00, 0x7f, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x01, 0x00,
   0xff, 0x03, 0x00, 0xff, 0x07, 0x00, 0xff, 0x0f, 0x00, 0xff, 0x1f, 0x00,
   0xff, 0x3f, 0x00, 0xff, 0x7f, 0x00, 0xff, 0xff, 0x00, 0xff, 0xff, 0x01,
   0xff, 0xff, 0x03, 0xff, 0xff, 0x07, 0xff, 0xff, 0x07, 0xff, 0x07, 0x00,
   0xbf, 0x0f, 0x00, 0x9f, 0x0f, 0x00, 0x0f, 0x1f, 0x00, 0x07, 0x1f, 0x00,
   0x03, 0x3e, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x3c, 0x00,
   0x00, 0x0c, 0x00, 0x00, 0x00, 0x00};

/* This is the mask for an upwards right pointing cursor which is used
*  for pulldown menus at the same time as the above cursor is used.
*/
#define ularrow_menu_x_hot 17
#define ularrow_menu_y_hot 1
static Byte ularrow_menu_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x03, 0x00, 0x80, 0x03,
   0x00, 0xc0, 0x03, 0x00, 0xe0, 0x03, 0x00, 0xf0, 0x03, 0x00, 0xf8, 0x03,
   0x00, 0xfc, 0x03, 0x00, 0xfe, 0x03, 0x00, 0xff, 0x03, 0x80, 0xff, 0x03,
   0xc0, 0xff, 0x03, 0xe0, 0xff, 0x03, 0xf0, 0xff, 0x03, 0xf8, 0xff, 0x03,
   0xfc, 0xff, 0x03, 0xfe, 0xff, 0x03, 0x00, 0xfe, 0x03, 0x00, 0xee, 0x03,
   0x00, 0xc7, 0x03, 0x00, 0x87, 0x03, 0x80, 0x03, 0x03, 0x80, 0x03, 0x02,
   0xc0, 0x01, 0x00, 0xc0, 0x01, 0x00, 0xe0, 0x00, 0x00, 0x80, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
static Byte ularrow_menu_mask_bits[] = {
   0x00, 0x00, 0x06, 0x00, 0x00, 0x07, 0x00, 0x80, 0x07, 0x00, 0xc0, 0x07,
   0x00, 0xe0, 0x07, 0x00, 0xf0, 0x07, 0x00, 0xf8, 0x07, 0x00, 0xfc, 0x07,
   0x00, 0xfe, 0x07, 0x00, 0xff, 0x07, 0x80, 0xff, 0x07, 0xc0, 0xff, 0x07,
   0xe0, 0xff, 0x07, 0xf0, 0xff, 0x07, 0xf8, 0xff, 0x07, 0xfc, 0xff, 0x07,
   0xfe, 0xff, 0x07, 0xff, 0xff, 0x07, 0xff, 0xff, 0x07, 0x00, 0xff, 0x07,
   0x80, 0xef, 0x07, 0x80, 0xcf, 0x07, 0xc0, 0x87, 0x07, 0xc0, 0x07, 0x07,
   0xe0, 0x03, 0x06, 0xe0, 0x03, 0x00, 0xf0, 0x01, 0x00, 0xe0, 0x01, 0x00,
   0x80, 0x01, 0x00, 0x00, 0x00, 0x00};
